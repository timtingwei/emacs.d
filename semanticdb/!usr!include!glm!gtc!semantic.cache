;; Object gtc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "gtc/"
  :tables
  (list
    (semanticdb-table "matrix_transform.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("../mat4x4.hpp" include nil nil [809 833])
            ("../vec2.hpp" include nil nil [834 856])
            ("../vec3.hpp" include nil nil [857 879])
            ("../vec4.hpp" include nil nil [880 902])
            ("../gtc/constants.hpp" include nil nil [903 934])
            ("glm" type
               (:members 
                  ( ("translate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("m" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2279 2304])
                            ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2305 2327]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2250 2328])
                    ("rotate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("m" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3027 3052])
                            ("angle" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3053 3061])
                            ("axis" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3062 3087]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3001 3088])
                    ("scale" function
                       (:prototype-flag t
                        :arguments 
                          ( ("m" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3695 3720])
                            ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3721 3743]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3670 3744])
                    ("ortho" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4284 4291])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4292 4300])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4301 4310])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4311 4317]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4252 4318])
                    ("orthoLH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4867 4874])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4875 4883])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4884 4893])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4894 4900])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4901 4909])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4910 4917]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4830 4918])
                    ("orthoLH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5466 5473])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5474 5482])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5483 5492])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5493 5499])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5500 5508])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5509 5516]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5429 5517])
                    ("orthoRH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6066 6073])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6074 6082])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6083 6092])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6093 6099])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6100 6108])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6109 6116]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6029 6117])
                    ("orthoRH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6666 6673])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6674 6682])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6683 6692])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6693 6699])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6700 6708])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6709 6716]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6629 6717])
                    ("orthoZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7263 7270])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7271 7279])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7280 7289])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7290 7296])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7297 7305])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7306 7313]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7229 7314])
                    ("orthoNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7933 7940])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7941 7949])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7950 7959])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7960 7966])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7967 7975])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7976 7983]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7899 7984])
                    ("orthoLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8723 8730])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8731 8739])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8740 8749])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8750 8756])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8757 8765])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8766 8773]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [8689 8774])
                    ("orthoRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9514 9521])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9522 9530])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9531 9540])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9541 9547])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9548 9556])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9557 9564]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [9480 9565])
                    ("ortho" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10279 10286])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10287 10295])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10296 10305])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10306 10312])
                            ("zNear" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10313 10321])
                            ("zFar" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10322 10329]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [10247 10330])
                    ("frustumLH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10741 10748])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10749 10757])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10758 10767])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10768 10774])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10775 10782])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10783 10789]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [10702 10790])
                    ("frustumLH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11200 11207])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11208 11216])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11217 11226])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11227 11233])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11234 11241])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11242 11248]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11161 11249])
                    ("frustumRH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11661 11668])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11669 11677])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11678 11687])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11688 11694])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11695 11702])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11703 11709]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11622 11710])
                    ("frustumRH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12121 12128])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12129 12137])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12138 12147])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12148 12154])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12155 12162])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12163 12169]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12082 12170])
                    ("frustumZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12670 12677])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12678 12686])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12687 12696])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12697 12703])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12704 12711])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12712 12718]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12634 12719])
                    ("frustumNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13218 13225])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13226 13234])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13235 13244])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13245 13251])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13252 13259])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13260 13266]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [13182 13267])
                    ("frustumLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13868 13875])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13876 13884])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13885 13894])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13895 13901])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13902 13909])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13910 13916]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [13832 13917])
                    ("frustumRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14519 14526])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14527 14535])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14536 14545])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14546 14552])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14553 14560])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14561 14567]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14483 14568])
                    ("frustum" function
                       (:prototype-flag t
                        :arguments 
                          ( ("left" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15191 15198])
                            ("right" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15199 15207])
                            ("bottom" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15208 15217])
                            ("top" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15218 15224])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15225 15232])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15233 15239]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [15157 15240])
                    ("perspectiveRH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16157 16164])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16165 16174])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16175 16182])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16183 16189]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [16114 16190])
                    ("perspectiveRH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17105 17112])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17113 17122])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17123 17130])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17131 17137]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [17062 17138])
                    ("perspectiveLH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18053 18060])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18061 18070])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18071 18078])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18079 18085]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [18010 18086])
                    ("perspectiveLH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19000 19007])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19008 19017])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19018 19025])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19026 19032]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [18957 19033])
                    ("perspectiveZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20036 20043])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20044 20053])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20054 20061])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20062 20068]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [19996 20069])
                    ("perspectiveNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21071 21078])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21079 21088])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21089 21096])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21097 21103]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [21031 21104])
                    ("perspectiveRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22210 22217])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22218 22227])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22228 22235])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22236 22242]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [22170 22243])
                    ("perspectiveLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23348 23355])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23356 23365])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23366 23373])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23374 23380]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [23308 23381])
                    ("perspective" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24482 24489])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24490 24499])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24500 24507])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24508 24514]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [24444 24515])
                    ("perspectiveFovRH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25314 25320])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25321 25329])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25330 25339])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25340 25347])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25348 25354]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [25268 25355])
                    ("perspectiveFovRH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26153 26159])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26160 26168])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26169 26178])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26179 26186])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26187 26193]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [26107 26194])
                    ("perspectiveFovLH_ZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26992 26998])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26999 27007])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27008 27017])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27018 27025])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27026 27032]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [26946 27033])
                    ("perspectiveFovLH_NO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27830 27836])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27837 27845])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27846 27855])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27856 27863])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27864 27870]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [27784 27871])
                    ("perspectiveFovZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28740 28746])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28747 28755])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28756 28765])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28766 28773])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28774 28780]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [28697 28781])
                    ("perspectiveFovNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29649 29655])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29656 29664])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29665 29674])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29675 29682])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29683 29689]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [29606 29690])
                    ("perspectiveFovRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30661 30667])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30668 30676])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30677 30686])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30687 30694])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30695 30701]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [30618 30702])
                    ("perspectiveFovLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31672 31678])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31679 31687])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31688 31697])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31698 31705])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31706 31712]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [31629 31713])
                    ("perspectiveFov" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fov" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32559 32565])
                            ("width" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32566 32574])
                            ("height" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32575 32584])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32585 32592])
                            ("far" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32593 32599]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [32518 32600])
                    ("infinitePerspectiveLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33307 33314])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33315 33324])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33325 33332]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [33259 33333])
                    ("infinitePerspectiveRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34041 34048])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34049 34058])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34059 34066]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [33993 34067])
                    ("infinitePerspective" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34783 34790])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34791 34800])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34801 34808]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [34737 34809])
                    ("tweakedInfinitePerspective" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35567 35574])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35575 35584])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35585 35592]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [35514 35593])
                    ("tweakedInfinitePerspective" function
                       (:prototype-flag t
                        :arguments 
                          ( ("fovy" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36374 36381])
                            ("aspect" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36382 36391])
                            ("near" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36392 36399])
                            ("ep" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36400 36405]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [36321 36406])
                    ("projectZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("obj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [37341 37365])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [37366 37395])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [37396 37424])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [37425 37454]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [37315 37455])
                    ("projectNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("obj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [38389 38413])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [38414 38443])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [38444 38472])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [38473 38502]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [38363 38503])
                    ("project" function
                       (:prototype-flag t
                        :arguments 
                          ( ("obj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39438 39462])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39463 39492])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39493 39521])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [39522 39551]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [39414 39552])
                    ("unProjectZO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("win" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [40482 40506])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [40507 40536])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [40537 40565])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [40566 40595]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [40454 40596])
                    ("unProjectNO" function
                       (:prototype-flag t
                        :arguments 
                          ( ("win" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41525 41549])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41550 41579])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41580 41608])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41609 41638]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [41497 41639])
                    ("unProject" function
                       (:prototype-flag t
                        :arguments 
                          ( ("win" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [42569 42593])
                            ("model" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [42594 42623])
                            ("proj" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [42624 42652])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [42653 42682]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [42543 42683])
                    ("pickMatrix" function
                       (:prototype-flag t
                        :arguments 
                          ( ("center" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [43388 43415])
                            ("delta" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [43416 43442])
                            ("viewport" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("U" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [43443 43472]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [43358 43473])
                    ("lookAtRH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("eye" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44041 44065])
                            ("center" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44066 44093])
                            ("up" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44094 44117]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [44013 44118])
                    ("lookAtLH" function
                       (:prototype-flag t
                        :arguments 
                          ( ("eye" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44685 44709])
                            ("center" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44710 44737])
                            ("up" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [44738 44761]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [44657 44762])
                    ("lookAt" function
                       (:prototype-flag t
                        :arguments 
                          ( ("eye" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45466 45490])
                            ("center" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45491 45518])
                            ("up" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [45519 45542]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [45440 45543]))                  
                :type "namespace")
                nil [1084 45554])
            ("matrix_transform.inl" include nil nil [45571 45602]))          
      :file "matrix_transform.hpp"
      :pointmax 45603
      :fsize 45602
      :lastmodtime '(23117 59366 751423 334000)
      :unmatched-syntax '((symbol 45426 . 45439) (punctuation 45423 . 45424) (symbol 45422 . 45423) (symbol 45412 . 45421) (punctuation 45410 . 45411) (symbol 45409 . 45410) (TYPENAME 45400 . 45408) (punctuation 45399 . 45400) (TEMPLATE 45391 . 45399) (symbol 44643 . 44656) (punctuation 44640 . 44641) (symbol 44639 . 44640) (symbol 44629 . 44638) (punctuation 44627 . 44628) (symbol 44626 . 44627) (TYPENAME 44617 . 44625) (punctuation 44616 . 44617) (TEMPLATE 44608 . 44616) (symbol 43999 . 44012) (punctuation 43996 . 43997) (symbol 43995 . 43996) (symbol 43985 . 43994) (punctuation 43983 . 43984) (symbol 43982 . 43983) (TYPENAME 43973 . 43981) (punctuation 43972 . 43973) (TEMPLATE 43964 . 43972) (symbol 43344 . 43357) (punctuation 43341 . 43342) (symbol 43340 . 43341) (TYPENAME 43331 . 43339) (punctuation 43329 . 43330) (symbol 43328 . 43329) (symbol 43318 . 43327) (punctuation 43316 . 43317) (symbol 43315 . 43316) (TYPENAME 43306 . 43314) (punctuation 43305 . 43306) (TEMPLATE 43297 . 43305) (symbol 42529 . 42542) (punctuation 42526 . 42527) (symbol 42525 . 42526) (symbol 42515 . 42524) (punctuation 42513 . 42514) (symbol 42512 . 42513) (TYPENAME 42503 . 42511) (punctuation 42501 . 42502) (symbol 42500 . 42501) (TYPENAME 42491 . 42499) (punctuation 42490 . 42491) (TEMPLATE 42482 . 42490) (symbol 41483 . 41496) (punctuation 41480 . 41481) (symbol 41479 . 41480) (symbol 41469 . 41478) (punctuation 41467 . 41468) (symbol 41466 . 41467) (TYPENAME 41457 . 41465) (punctuation 41455 . 41456) (symbol 41454 . 41455) (TYPENAME 41445 . 41453) (punctuation 41444 . 41445) (TEMPLATE 41436 . 41444) (symbol 40440 . 40453) (punctuation 40437 . 40438) (symbol 40436 . 40437) (symbol 40426 . 40435) (punctuation 40424 . 40425) (symbol 40423 . 40424) (TYPENAME 40414 . 40422) (punctuation 40412 . 40413) (symbol 40411 . 40412) (TYPENAME 40402 . 40410) (punctuation 40401 . 40402) (TEMPLATE 40393 . 40401) (symbol 39400 . 39413) (punctuation 39397 . 39398) (symbol 39396 . 39397) (symbol 39386 . 39395) (punctuation 39384 . 39385) (symbol 39383 . 39384) (TYPENAME 39374 . 39382) (punctuation 39372 . 39373) (symbol 39371 . 39372) (TYPENAME 39362 . 39370) (punctuation 39361 . 39362) (TEMPLATE 39353 . 39361) (symbol 38349 . 38362) (punctuation 38346 . 38347) (symbol 38345 . 38346) (symbol 38335 . 38344) (punctuation 38333 . 38334) (symbol 38332 . 38333) (TYPENAME 38323 . 38331) (punctuation 38321 . 38322) (symbol 38320 . 38321) (TYPENAME 38311 . 38319) (punctuation 38310 . 38311) (TEMPLATE 38302 . 38310) (symbol 37301 . 37314) (punctuation 37298 . 37299) (symbol 37297 . 37298) (symbol 37287 . 37296) (punctuation 37285 . 37286) (symbol 37284 . 37285) (TYPENAME 37275 . 37283) (punctuation 37273 . 37274) (symbol 37272 . 37273) (TYPENAME 37263 . 37271) (punctuation 37262 . 37263) (TEMPLATE 37254 . 37262) (symbol 36307 . 36320) (punctuation 36304 . 36305) (symbol 36303 . 36304) (TYPENAME 36294 . 36302) (punctuation 36293 . 36294) (TEMPLATE 36285 . 36293) (symbol 35500 . 35513) (punctuation 35497 . 35498) (symbol 35496 . 35497) (TYPENAME 35487 . 35495) (punctuation 35486 . 35487) (TEMPLATE 35478 . 35486) (symbol 34723 . 34736) (punctuation 34720 . 34721) (symbol 34719 . 34720) (TYPENAME 34710 . 34718) (punctuation 34709 . 34710) (TEMPLATE 34701 . 34709) (symbol 33979 . 33992) (punctuation 33976 . 33977) (symbol 33975 . 33976) (TYPENAME 33966 . 33974) (punctuation 33965 . 33966) (TEMPLATE 33957 . 33965) (symbol 33245 . 33258) (punctuation 33242 . 33243) (symbol 33241 . 33242) (TYPENAME 33232 . 33240) (punctuation 33231 . 33232) (TEMPLATE 33223 . 33231) (symbol 32504 . 32517) (punctuation 32501 . 32502) (symbol 32500 . 32501) (TYPENAME 32491 . 32499) (punctuation 32490 . 32491) (TEMPLATE 32482 . 32490) (symbol 31615 . 31628) (punctuation 31612 . 31613) (symbol 31611 . 31612) (TYPENAME 31602 . 31610) (punctuation 31601 . 31602) (TEMPLATE 31593 . 31601) (symbol 30604 . 30617) (punctuation 30601 . 30602) (symbol 30600 . 30601) (TYPENAME 30591 . 30599) (punctuation 30590 . 30591) (TEMPLATE 30582 . 30590) (symbol 29592 . 29605) (punctuation 29589 . 29590) (symbol 29588 . 29589) (TYPENAME 29579 . 29587) (punctuation 29578 . 29579) (TEMPLATE 29570 . 29578) (symbol 28683 . 28696) (punctuation 28680 . 28681) (symbol 28679 . 28680) (TYPENAME 28670 . 28678) (punctuation 28669 . 28670) (TEMPLATE 28661 . 28669) (symbol 27770 . 27783) (punctuation 27767 . 27768) (symbol 27766 . 27767) (TYPENAME 27757 . 27765) (punctuation 27756 . 27757) (TEMPLATE 27748 . 27756) (symbol 26932 . 26945) (punctuation 26929 . 26930) (symbol 26928 . 26929) (TYPENAME 26919 . 26927) (punctuation 26918 . 26919) (TEMPLATE 26910 . 26918) (symbol 26093 . 26106) (punctuation 26090 . 26091) (symbol 26089 . 26090) (TYPENAME 26080 . 26088) (punctuation 26079 . 26080) (TEMPLATE 26071 . 26079) (symbol 25254 . 25267) (punctuation 25251 . 25252) (symbol 25250 . 25251) (TYPENAME 25241 . 25249) (punctuation 25240 . 25241) (TEMPLATE 25232 . 25240) (symbol 24430 . 24443) (punctuation 24427 . 24428) (symbol 24426 . 24427) (TYPENAME 24417 . 24425) (punctuation 24416 . 24417) (TEMPLATE 24408 . 24416) (symbol 23294 . 23307) (punctuation 23291 . 23292) (symbol 23290 . 23291) (TYPENAME 23281 . 23289) (punctuation 23280 . 23281) (TEMPLATE 23272 . 23280) (symbol 22156 . 22169) (punctuation 22153 . 22154) (symbol 22152 . 22153) (TYPENAME 22143 . 22151) (punctuation 22142 . 22143) (TEMPLATE 22134 . 22142) (symbol 21017 . 21030) (punctuation 21014 . 21015) (symbol 21013 . 21014) (TYPENAME 21004 . 21012) (punctuation 21003 . 21004) (TEMPLATE 20995 . 21003) (symbol 19982 . 19995) (punctuation 19979 . 19980) (symbol 19978 . 19979) (TYPENAME 19969 . 19977) (punctuation 19968 . 19969) (TEMPLATE 19960 . 19968) (symbol 18943 . 18956) (punctuation 18940 . 18941) (symbol 18939 . 18940) (TYPENAME 18930 . 18938) (punctuation 18929 . 18930) (TEMPLATE 18921 . 18929) (symbol 17996 . 18009) (punctuation 17993 . 17994) (symbol 17992 . 17993) (TYPENAME 17983 . 17991) (punctuation 17982 . 17983) (TEMPLATE 17974 . 17982) (symbol 17048 . 17061) (punctuation 17045 . 17046) (symbol 17044 . 17045) (TYPENAME 17035 . 17043) (punctuation 17034 . 17035) (TEMPLATE 17026 . 17034) (symbol 16100 . 16113) (punctuation 16097 . 16098) (symbol 16096 . 16097) (TYPENAME 16087 . 16095) (punctuation 16086 . 16087) (TEMPLATE 16078 . 16086) (symbol 15143 . 15156) (punctuation 15140 . 15141) (symbol 15139 . 15140) (TYPENAME 15130 . 15138) (punctuation 15129 . 15130) (TEMPLATE 15121 . 15129) (symbol 14469 . 14482) (punctuation 14466 . 14467) (symbol 14465 . 14466) (TYPENAME 14456 . 14464) (punctuation 14455 . 14456) (TEMPLATE 14447 . 14455) (symbol 13818 . 13831) (punctuation 13815 . 13816) (symbol 13814 . 13815) (TYPENAME 13805 . 13813) (punctuation 13804 . 13805) (TEMPLATE 13796 . 13804) (symbol 13168 . 13181) (punctuation 13165 . 13166) (symbol 13164 . 13165) (TYPENAME 13155 . 13163) (punctuation 13154 . 13155) (TEMPLATE 13146 . 13154) (symbol 12620 . 12633) (punctuation 12617 . 12618) (symbol 12616 . 12617) (TYPENAME 12607 . 12615) (punctuation 12606 . 12607) (TEMPLATE 12598 . 12606) (symbol 12068 . 12081) (punctuation 12065 . 12066) (symbol 12064 . 12065) (TYPENAME 12055 . 12063) (punctuation 12054 . 12055) (TEMPLATE 12046 . 12054) (symbol 11608 . 11621) (punctuation 11605 . 11606) (symbol 11604 . 11605) (TYPENAME 11595 . 11603) (punctuation 11594 . 11595) (TEMPLATE 11586 . 11594) (symbol 11147 . 11160) (punctuation 11144 . 11145) (symbol 11143 . 11144) (TYPENAME 11134 . 11142) (punctuation 11133 . 11134) (TEMPLATE 11125 . 11133) (symbol 10688 . 10701) (punctuation 10685 . 10686) (symbol 10684 . 10685) (TYPENAME 10675 . 10683) (punctuation 10674 . 10675) (TEMPLATE 10666 . 10674) (symbol 10233 . 10246) (punctuation 10230 . 10231) (symbol 10229 . 10230) (TYPENAME 10220 . 10228) (punctuation 10219 . 10220) (TEMPLATE 10211 . 10219) (symbol 9466 . 9479) (punctuation 9463 . 9464) (symbol 9462 . 9463) (TYPENAME 9453 . 9461) (punctuation 9452 . 9453) (TEMPLATE 9444 . 9452) (symbol 8675 . 8688) (punctuation 8672 . 8673) (symbol 8671 . 8672) (TYPENAME 8662 . 8670) (punctuation 8661 . 8662) (TEMPLATE 8653 . 8661) (symbol 7885 . 7898) (punctuation 7882 . 7883) (symbol 7881 . 7882) (TYPENAME 7872 . 7880) (punctuation 7871 . 7872) (TEMPLATE 7863 . 7871) (symbol 7215 . 7228) (punctuation 7212 . 7213) (symbol 7211 . 7212) (TYPENAME 7202 . 7210) (punctuation 7201 . 7202) (TEMPLATE 7193 . 7201) (symbol 6615 . 6628) (punctuation 6612 . 6613) (symbol 6611 . 6612) (TYPENAME 6602 . 6610) (punctuation 6601 . 6602) (TEMPLATE 6593 . 6601) (symbol 6015 . 6028) (punctuation 6012 . 6013) (symbol 6011 . 6012) (TYPENAME 6002 . 6010) (punctuation 6001 . 6002) (TEMPLATE 5993 . 6001) (symbol 5415 . 5428) (punctuation 5412 . 5413) (symbol 5411 . 5412) (TYPENAME 5402 . 5410) (punctuation 5401 . 5402) (TEMPLATE 5393 . 5401) (symbol 4816 . 4829) (punctuation 4813 . 4814) (symbol 4812 . 4813) (TYPENAME 4803 . 4811) (punctuation 4802 . 4803) (TEMPLATE 4794 . 4802) (symbol 4238 . 4251) (punctuation 4235 . 4236) (symbol 4234 . 4235) (TYPENAME 4225 . 4233) (punctuation 4224 . 4225) (TEMPLATE 4216 . 4224) (symbol 3656 . 3669) (punctuation 3653 . 3654) (symbol 3652 . 3653) (symbol 3642 . 3651) (punctuation 3640 . 3641) (symbol 3639 . 3640) (TYPENAME 3630 . 3638) (punctuation 3629 . 3630) (TEMPLATE 3621 . 3629) (symbol 2987 . 3000) (punctuation 2984 . 2985) (symbol 2983 . 2984) (symbol 2973 . 2982) (punctuation 2971 . 2972) (symbol 2970 . 2971) (TYPENAME 2961 . 2969) (punctuation 2960 . 2961) (TEMPLATE 2952 . 2960) (symbol 2236 . 2249) (punctuation 2233 . 2234) (symbol 2232 . 2233) (symbol 2222 . 2231) (punctuation 2220 . 2221) (symbol 2219 . 2220) (TYPENAME 2210 . 2218) (punctuation 2209 . 2210) (TEMPLATE 2201 . 2209) (semantic-list 1023 . 1075) (symbol 1016 . 1023) (string 1024 . 1074) (symbol 1009 . 1015) (string 1024 . 1074) (punctuation 1007 . 1008) (symbol 787 . 791) (symbol 780 . 786) (punctuation 779 . 780)))
    (semanticdb-table "type_ptr.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("../gtc/quaternion.hpp" include nil nil [1119 1151])
            ("../gtc/vec1.hpp" include nil nil [1152 1178])
            ("../vec2.hpp" include nil nil [1179 1201])
            ("../vec3.hpp" include nil nil [1202 1224])
            ("../vec4.hpp" include nil nil [1225 1247])
            ("../mat2x2.hpp" include nil nil [1248 1272])
            ("../mat2x3.hpp" include nil nil [1273 1297])
            ("../mat2x4.hpp" include nil nil [1298 1322])
            ("../mat3x2.hpp" include nil nil [1323 1347])
            ("../mat3x3.hpp" include nil nil [1348 1372])
            ("../mat3x4.hpp" include nil nil [1373 1397])
            ("../mat4x2.hpp" include nil nil [1398 1422])
            ("../mat4x3.hpp" include nil nil [1423 1447])
            ("../mat4x4.hpp" include nil nil [1448 1472])
            ("cstring" include (:system-flag t) nil [1473 1491])
            ("glm" type
               (:members 
                  ( ("value_ptr" function
                       (:prototype-flag t
                        :pointer 1
                        :typemodifiers ("typename")
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("genType" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1870 1887]))                          
                        :type ("genType::value_type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1823 1888])
                    ("make_vec1" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2023 2045]))                          
                        :type ("vec" type
                             (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2000 2046])
                    ("make_vec1" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2181 2203]))                          
                        :type ("vec" type
                             (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2158 2204])
                    ("make_vec1" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2339 2361]))                          
                        :type ("vec" type
                             (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2316 2362])
                    ("make_vec1" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2497 2519]))                          
                        :type ("vec" type
                             (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2474 2520])
                    ("make_vec2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2655 2677]))                          
                        :type ("vec" type
                             (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2632 2678])
                    ("make_vec2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2813 2835]))                          
                        :type ("vec" type
                             (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2790 2836])
                    ("make_vec2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2971 2993]))                          
                        :type ("vec" type
                             (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [2948 2994])
                    ("make_vec2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3129 3151]))                          
                        :type ("vec" type
                             (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3106 3152])
                    ("make_vec3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3287 3309]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3264 3310])
                    ("make_vec3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3445 3467]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3422 3468])
                    ("make_vec3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3603 3625]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3580 3626])
                    ("make_vec3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3761 3783]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3738 3784])
                    ("make_vec4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("1") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3919 3941]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3896 3942])
                    ("make_vec4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("2") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4077 4099]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4054 4100])
                    ("make_vec4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4235 4257]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4212 4258])
                    ("make_vec4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4393 4415]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4370 4416])
                    ("make_vec2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4544 4564]))                          
                        :type ("vec" type
                             (:template-specifier (("2") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4514 4565])
                    ("make_vec3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4693 4713]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4663 4714])
                    ("make_vec4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4842 4862]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4812 4863])
                    ("make_mat2x2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4996 5016]))                          
                        :type ("mat" type
                             (:template-specifier (("2") ("2") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4961 5017])
                    ("make_mat2x3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5150 5170]))                          
                        :type ("mat" type
                             (:template-specifier (("2") ("3") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5115 5171])
                    ("make_mat2x4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5304 5324]))                          
                        :type ("mat" type
                             (:template-specifier (("2") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5269 5325])
                    ("make_mat3x2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5458 5478]))                          
                        :type ("mat" type
                             (:template-specifier (("3") ("2") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5423 5479])
                    ("make_mat3x3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5612 5632]))                          
                        :type ("mat" type
                             (:template-specifier (("3") ("3") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5577 5633])
                    ("make_mat3x4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5766 5786]))                          
                        :type ("mat" type
                             (:template-specifier (("3") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5731 5787])
                    ("make_mat4x2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5920 5940]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("2") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5885 5941])
                    ("make_mat4x3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6074 6094]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("3") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6039 6095])
                    ("make_mat4x4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6228 6248]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6193 6249])
                    ("make_mat2" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6381 6401]))                          
                        :type ("mat" type
                             (:template-specifier (("2") ("2") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6348 6402])
                    ("make_mat3" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6533 6553]))                          
                        :type ("mat" type
                             (:template-specifier (("3") ("3") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6500 6554])
                    ("make_mat4" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6687 6707]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("defaultp" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6654 6708])
                    ("make_quat" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6839 6859]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("defaultp" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6810 6860]))                  
                :type "namespace")
                nil [1633 6871])
            ("type_ptr.inl" include nil nil [6888 6911]))          
      :file "type_ptr.hpp"
      :pointmax 6912
      :fsize 6911
      :lastmodtime '(23117 59366 751423 334000)
      :unmatched-syntax '((symbol 6796 . 6809) (punctuation 6793 . 6794) (symbol 6792 . 6793) (TYPENAME 6783 . 6791) (punctuation 6782 . 6783) (TEMPLATE 6774 . 6782) (symbol 6640 . 6653) (punctuation 6637 . 6638) (symbol 6636 . 6637) (TYPENAME 6627 . 6635) (punctuation 6626 . 6627) (TEMPLATE 6618 . 6626) (symbol 6486 . 6499) (punctuation 6483 . 6484) (symbol 6482 . 6483) (TYPENAME 6473 . 6481) (punctuation 6472 . 6473) (TEMPLATE 6464 . 6472) (symbol 6334 . 6347) (punctuation 6331 . 6332) (symbol 6330 . 6331) (TYPENAME 6321 . 6329) (punctuation 6320 . 6321) (TEMPLATE 6312 . 6320) (symbol 6179 . 6192) (punctuation 6176 . 6177) (symbol 6175 . 6176) (TYPENAME 6166 . 6174) (punctuation 6165 . 6166) (TEMPLATE 6157 . 6165) (symbol 6025 . 6038) (punctuation 6022 . 6023) (symbol 6021 . 6022) (TYPENAME 6012 . 6020) (punctuation 6011 . 6012) (TEMPLATE 6003 . 6011) (symbol 5871 . 5884) (punctuation 5868 . 5869) (symbol 5867 . 5868) (TYPENAME 5858 . 5866) (punctuation 5857 . 5858) (TEMPLATE 5849 . 5857) (symbol 5717 . 5730) (punctuation 5714 . 5715) (symbol 5713 . 5714) (TYPENAME 5704 . 5712) (punctuation 5703 . 5704) (TEMPLATE 5695 . 5703) (symbol 5563 . 5576) (punctuation 5560 . 5561) (symbol 5559 . 5560) (TYPENAME 5550 . 5558) (punctuation 5549 . 5550) (TEMPLATE 5541 . 5549) (symbol 5409 . 5422) (punctuation 5406 . 5407) (symbol 5405 . 5406) (TYPENAME 5396 . 5404) (punctuation 5395 . 5396) (TEMPLATE 5387 . 5395) (symbol 5255 . 5268) (punctuation 5252 . 5253) (symbol 5251 . 5252) (TYPENAME 5242 . 5250) (punctuation 5241 . 5242) (TEMPLATE 5233 . 5241) (symbol 5101 . 5114) (punctuation 5098 . 5099) (symbol 5097 . 5098) (TYPENAME 5088 . 5096) (punctuation 5087 . 5088) (TEMPLATE 5079 . 5087) (symbol 4947 . 4960) (punctuation 4944 . 4945) (symbol 4943 . 4944) (TYPENAME 4934 . 4942) (punctuation 4933 . 4934) (TEMPLATE 4925 . 4933) (symbol 4798 . 4811) (punctuation 4795 . 4796) (symbol 4794 . 4795) (TYPENAME 4785 . 4793) (punctuation 4784 . 4785) (TEMPLATE 4776 . 4784) (symbol 4649 . 4662) (punctuation 4646 . 4647) (symbol 4645 . 4646) (TYPENAME 4636 . 4644) (punctuation 4635 . 4636) (TEMPLATE 4627 . 4635) (symbol 4500 . 4513) (punctuation 4497 . 4498) (symbol 4496 . 4497) (TYPENAME 4487 . 4495) (punctuation 4486 . 4487) (TEMPLATE 4478 . 4486) (symbol 4356 . 4369) (punctuation 4353 . 4354) (symbol 4352 . 4353) (symbol 4342 . 4351) (punctuation 4340 . 4341) (symbol 4339 . 4340) (TYPENAME 4330 . 4338) (punctuation 4329 . 4330) (TEMPLATE 4320 . 4328) (symbol 4198 . 4211) (punctuation 4195 . 4196) (symbol 4194 . 4195) (symbol 4184 . 4193) (punctuation 4182 . 4183) (symbol 4181 . 4182) (TYPENAME 4172 . 4180) (punctuation 4171 . 4172) (TEMPLATE 4162 . 4170) (symbol 4040 . 4053) (punctuation 4037 . 4038) (symbol 4036 . 4037) (symbol 4026 . 4035) (punctuation 4024 . 4025) (symbol 4023 . 4024) (TYPENAME 4014 . 4022) (punctuation 4013 . 4014) (TEMPLATE 4004 . 4012) (symbol 3882 . 3895) (punctuation 3879 . 3880) (symbol 3878 . 3879) (symbol 3868 . 3877) (punctuation 3866 . 3867) (symbol 3865 . 3866) (TYPENAME 3856 . 3864) (punctuation 3855 . 3856) (TEMPLATE 3846 . 3854) (symbol 3724 . 3737) (punctuation 3721 . 3722) (symbol 3720 . 3721) (symbol 3710 . 3719) (punctuation 3708 . 3709) (symbol 3707 . 3708) (TYPENAME 3698 . 3706) (punctuation 3697 . 3698) (TEMPLATE 3688 . 3696) (symbol 3566 . 3579) (punctuation 3563 . 3564) (symbol 3562 . 3563) (symbol 3552 . 3561) (punctuation 3550 . 3551) (symbol 3549 . 3550) (TYPENAME 3540 . 3548) (punctuation 3539 . 3540) (TEMPLATE 3530 . 3538) (symbol 3408 . 3421) (punctuation 3405 . 3406) (symbol 3404 . 3405) (symbol 3394 . 3403) (punctuation 3392 . 3393) (symbol 3391 . 3392) (TYPENAME 3382 . 3390) (punctuation 3381 . 3382) (TEMPLATE 3372 . 3380) (symbol 3250 . 3263) (punctuation 3247 . 3248) (symbol 3246 . 3247) (symbol 3236 . 3245) (punctuation 3234 . 3235) (symbol 3233 . 3234) (TYPENAME 3224 . 3232) (punctuation 3223 . 3224) (TEMPLATE 3214 . 3222) (symbol 3092 . 3105) (punctuation 3089 . 3090) (symbol 3088 . 3089) (symbol 3078 . 3087) (punctuation 3076 . 3077) (symbol 3075 . 3076) (TYPENAME 3066 . 3074) (punctuation 3065 . 3066) (TEMPLATE 3056 . 3064) (symbol 2934 . 2947) (punctuation 2931 . 2932) (symbol 2930 . 2931) (symbol 2920 . 2929) (punctuation 2918 . 2919) (symbol 2917 . 2918) (TYPENAME 2908 . 2916) (punctuation 2907 . 2908) (TEMPLATE 2898 . 2906) (symbol 2776 . 2789) (punctuation 2773 . 2774) (symbol 2772 . 2773) (symbol 2762 . 2771) (punctuation 2760 . 2761) (symbol 2759 . 2760) (TYPENAME 2750 . 2758) (punctuation 2749 . 2750) (TEMPLATE 2740 . 2748) (symbol 2618 . 2631) (punctuation 2615 . 2616) (symbol 2614 . 2615) (symbol 2604 . 2613) (punctuation 2602 . 2603) (symbol 2601 . 2602) (TYPENAME 2592 . 2600) (punctuation 2591 . 2592) (TEMPLATE 2582 . 2590) (symbol 2460 . 2473) (punctuation 2457 . 2458) (symbol 2456 . 2457) (symbol 2446 . 2455) (punctuation 2444 . 2445) (symbol 2443 . 2444) (TYPENAME 2434 . 2442) (punctuation 2433 . 2434) (TEMPLATE 2424 . 2432) (symbol 2302 . 2315) (punctuation 2299 . 2300) (symbol 2298 . 2299) (symbol 2288 . 2297) (punctuation 2286 . 2287) (symbol 2285 . 2286) (TYPENAME 2276 . 2284) (punctuation 2275 . 2276) (TEMPLATE 2266 . 2274) (symbol 2144 . 2157) (punctuation 2141 . 2142) (symbol 2140 . 2141) (symbol 2130 . 2139) (punctuation 2128 . 2129) (symbol 2127 . 2128) (TYPENAME 2118 . 2126) (punctuation 2117 . 2118) (TEMPLATE 2108 . 2116) (symbol 1986 . 1999) (punctuation 1983 . 1984) (symbol 1982 . 1983) (symbol 1972 . 1981) (punctuation 1970 . 1971) (symbol 1969 . 1970) (TYPENAME 1960 . 1968) (punctuation 1959 . 1960) (TEMPLATE 1950 . 1958) (symbol 1809 . 1822) (punctuation 1806 . 1807) (symbol 1799 . 1806) (TYPENAME 1790 . 1798) (punctuation 1789 . 1790) (TEMPLATE 1781 . 1789) (semantic-list 1580 . 1624) (symbol 1573 . 1580) (string 1581 . 1623) (symbol 1566 . 1572) (string 1581 . 1623) (punctuation 1564 . 1565) (symbol 1098 . 1102) (symbol 1091 . 1097) (punctuation 1090 . 1091)))
    (semanticdb-table "constants.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("../detail/setup.hpp" include nil nil [332 362])
            ("glm" type
               (:members 
                  ( ("epsilon" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [701 719])
                    ("zero" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [817 832])
                    ("one" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [930 944])
                    ("pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1056 1069])
                    ("two_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1172 1189])
                    ("root_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1303 1321])
                    ("half_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1424 1442])
                    ("three_over_two_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1549 1577])
                    ("quarter_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1680 1701])
                    ("one_over_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1804 1826])
                    ("one_over_two_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1935 1961])
                    ("two_over_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2064 2086])
                    ("four_over_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2189 2212])
                    ("two_over_root_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2321 2348])
                    ("one_over_root_two" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2456 2484])
                    ("root_half_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2593 2616])
                    ("root_two_pi" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2725 2747])
                    ("root_ln_four" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2855 2878])
                    ("e" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2985 2997])
                    ("euler" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3110 3126])
                    ("root_two" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3230 3249])
                    ("root_three" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3353 3374])
                    ("root_five" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3478 3498])
                    ("ln_two" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3600 3617])
                    ("ln_ten" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3720 3737])
                    ("ln_ln_two" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3843 3863])
                    ("third" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3965 3981])
                    ("two_thirds" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4083 4104])
                    ("golden_ratio" function
                       (:prototype-flag t
                        :type ("genType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4226 4249]))                  
                :type "namespace")
                nil [505 4260])
            ("constants.inl" include nil nil [4278 4302]))          
      :file "constants.hpp"
      :pointmax 4303
      :fsize 4302
      :lastmodtime '(23117 59366 751423 334000)
      :unmatched-syntax '((symbol 4212 . 4225) (symbol 4198 . 4211) (punctuation 4195 . 4196) (symbol 4188 . 4195) (TYPENAME 4179 . 4187) (punctuation 4178 . 4179) (TEMPLATE 4170 . 4178) (symbol 4069 . 4082) (symbol 4055 . 4068) (punctuation 4052 . 4053) (symbol 4045 . 4052) (TYPENAME 4036 . 4044) (punctuation 4035 . 4036) (TEMPLATE 4027 . 4035) (symbol 3951 . 3964) (symbol 3937 . 3950) (punctuation 3934 . 3935) (symbol 3927 . 3934) (TYPENAME 3918 . 3926) (punctuation 3917 . 3918) (TEMPLATE 3909 . 3917) (symbol 3829 . 3842) (symbol 3815 . 3828) (punctuation 3812 . 3813) (symbol 3805 . 3812) (TYPENAME 3796 . 3804) (punctuation 3795 . 3796) (TEMPLATE 3787 . 3795) (symbol 3706 . 3719) (symbol 3692 . 3705) (punctuation 3689 . 3690) (symbol 3682 . 3689) (TYPENAME 3673 . 3681) (punctuation 3672 . 3673) (TEMPLATE 3664 . 3672) (symbol 3586 . 3599) (symbol 3572 . 3585) (punctuation 3569 . 3570) (symbol 3562 . 3569) (TYPENAME 3553 . 3561) (punctuation 3552 . 3553) (TEMPLATE 3544 . 3552) (symbol 3464 . 3477) (symbol 3450 . 3463) (punctuation 3447 . 3448) (symbol 3440 . 3447) (TYPENAME 3431 . 3439) (punctuation 3430 . 3431) (TEMPLATE 3422 . 3430) (symbol 3339 . 3352) (symbol 3325 . 3338) (punctuation 3322 . 3323) (symbol 3315 . 3322) (TYPENAME 3306 . 3314) (punctuation 3305 . 3306) (TEMPLATE 3297 . 3305) (symbol 3216 . 3229) (symbol 3202 . 3215) (punctuation 3199 . 3200) (symbol 3192 . 3199) (TYPENAME 3183 . 3191) (punctuation 3182 . 3183) (TEMPLATE 3174 . 3182) (symbol 3096 . 3109) (symbol 3082 . 3095) (punctuation 3079 . 3080) (symbol 3072 . 3079) (TYPENAME 3063 . 3071) (punctuation 3062 . 3063) (TEMPLATE 3054 . 3062) (symbol 2971 . 2984) (symbol 2957 . 2970) (punctuation 2954 . 2955) (symbol 2947 . 2954) (TYPENAME 2938 . 2946) (punctuation 2937 . 2938) (TEMPLATE 2929 . 2937) (symbol 2841 . 2854) (symbol 2827 . 2840) (punctuation 2824 . 2825) (symbol 2817 . 2824) (TYPENAME 2808 . 2816) (punctuation 2807 . 2808) (TEMPLATE 2799 . 2807) (symbol 2711 . 2724) (symbol 2697 . 2710) (punctuation 2694 . 2695) (symbol 2687 . 2694) (TYPENAME 2678 . 2686) (punctuation 2677 . 2678) (TEMPLATE 2669 . 2677) (symbol 2579 . 2592) (symbol 2565 . 2578) (punctuation 2562 . 2563) (symbol 2555 . 2562) (TYPENAME 2546 . 2554) (punctuation 2545 . 2546) (TEMPLATE 2537 . 2545) (symbol 2442 . 2455) (symbol 2428 . 2441) (punctuation 2425 . 2426) (symbol 2418 . 2425) (TYPENAME 2409 . 2417) (punctuation 2408 . 2409) (TEMPLATE 2400 . 2408) (symbol 2307 . 2320) (symbol 2293 . 2306) (punctuation 2290 . 2291) (symbol 2283 . 2290) (TYPENAME 2274 . 2282) (punctuation 2273 . 2274) (TEMPLATE 2265 . 2273) (symbol 2175 . 2188) (symbol 2161 . 2174) (punctuation 2158 . 2159) (symbol 2151 . 2158) (TYPENAME 2142 . 2150) (punctuation 2141 . 2142) (TEMPLATE 2133 . 2141) (symbol 2050 . 2063) (symbol 2036 . 2049) (punctuation 2033 . 2034) (symbol 2026 . 2033) (TYPENAME 2017 . 2025) (punctuation 2016 . 2017) (TEMPLATE 2008 . 2016) (symbol 1921 . 1934) (symbol 1907 . 1920) (punctuation 1904 . 1905) (symbol 1897 . 1904) (TYPENAME 1888 . 1896) (punctuation 1887 . 1888) (TEMPLATE 1879 . 1887) (symbol 1790 . 1803) (symbol 1776 . 1789) (punctuation 1773 . 1774) (symbol 1766 . 1773) (TYPENAME 1757 . 1765) (punctuation 1756 . 1757) (TEMPLATE 1748 . 1756) (symbol 1666 . 1679) (symbol 1652 . 1665) (punctuation 1649 . 1650) (symbol 1642 . 1649) (TYPENAME 1633 . 1641) (punctuation 1632 . 1633) (TEMPLATE 1624 . 1632) (symbol 1535 . 1548) (symbol 1521 . 1534) (punctuation 1518 . 1519) (symbol 1511 . 1518) (TYPENAME 1502 . 1510) (punctuation 1501 . 1502) (TEMPLATE 1493 . 1501) (symbol 1410 . 1423) (symbol 1396 . 1409) (punctuation 1393 . 1394) (symbol 1386 . 1393) (TYPENAME 1377 . 1385) (punctuation 1376 . 1377) (TEMPLATE 1368 . 1376) (symbol 1289 . 1302) (symbol 1275 . 1288) (punctuation 1272 . 1273) (symbol 1265 . 1272) (TYPENAME 1256 . 1264) (punctuation 1255 . 1256) (TEMPLATE 1247 . 1255) (symbol 1158 . 1171) (symbol 1144 . 1157) (punctuation 1141 . 1142) (symbol 1134 . 1141) (TYPENAME 1125 . 1133) (punctuation 1124 . 1125) (TEMPLATE 1116 . 1124) (symbol 1042 . 1055) (symbol 1028 . 1041) (punctuation 1025 . 1026) (symbol 1018 . 1025) (TYPENAME 1009 . 1017) (punctuation 1008 . 1009) (TEMPLATE 1000 . 1008) (symbol 916 . 929) (symbol 902 . 915) (punctuation 899 . 900) (symbol 892 . 899) (TYPENAME 883 . 891) (punctuation 882 . 883) (TEMPLATE 874 . 882) (symbol 803 . 816) (symbol 789 . 802) (punctuation 786 . 787) (symbol 779 . 786) (TYPENAME 770 . 778) (punctuation 769 . 770) (TEMPLATE 761 . 769) (symbol 687 . 700) (symbol 673 . 686) (punctuation 670 . 671) (symbol 663 . 670) (TYPENAME 654 . 662) (punctuation 653 . 654) (TEMPLATE 645 . 653) (semantic-list 451 . 496) (symbol 444 . 451) (string 452 . 495) (symbol 437 . 443) (string 452 . 495) (punctuation 435 . 436) (symbol 310 . 314) (symbol 303 . 309) (punctuation 302 . 303)))
    (semanticdb-table "matrix_transform.inl"
      :file "matrix_transform.inl"
      :fsize 29127
      :lastmodtime '(23117 59366 751423 334000))
    (semanticdb-table "quaternion.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("../mat3x3.hpp" include nil nil [383 407])
            ("../mat4x4.hpp" include nil nil [408 432])
            ("../vec3.hpp" include nil nil [433 455])
            ("../vec4.hpp" include nil nil [456 478])
            ("../gtc/constants.hpp" include nil nil [479 510])
            ("glm" type
               (:members 
                  ( ("tquat" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("qualifier" type nil nil nil))                          
                        :type "struct"
                        :members 
                          ( ("type" type
                               (:typedef ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [810 835])
                            ("value_type" type
                               (:typedef ("T" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [838 859])
                            ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1559 1572])
                            ("y" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1559 1572])
                            ("z" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1559 1572])
                            ("w" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1559 1572])
                            ("length_type" type
                               (:typedef ("length_t" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [1616 1645])
                            ("length" function (:type ("length_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1736 1767])
                            ("[]" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("i" variable (:type ("length_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1800 1814]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1785 1815])
                            ("[]" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("i" variable (:type ("length_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1852 1866]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1832 1873])
                            ("GLM_DEFAULT" variable (:type "int") (reparse-symbol classsubparts) [1953 1965])
                            ("GLM_DEFAULT" variable (:type "int") (reparse-symbol classsubparts) [2024 2036])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("P" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2097 2118]))                                  
                                :type ("GLM_CONSTEXPR" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2077 2119])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("s" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2197 2201])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vec" type
                                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2202 2224]))                                  
                                :type ("GLM_CONSTEXPR" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2177 2225])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("w" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2262 2266])
                                    ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2267 2271])
                                    ("y" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2272 2276])
                                    ("z" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2277 2281]))                                  
                                :type ("GLM_CONSTEXPR" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2242 2282])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil)
                                                  ("P" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2405 2426]))                                  
                                :type ("GLM_EXPLICIT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2386 2427])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("u" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vec" type
                                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2899 2921])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vec" type
                                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2922 2944]))                                  
                                :type ("GLM_FUNC_DECL" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2879 2945])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("eulerAngles" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("vec" type
                                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3057 3089]))                                  
                                :type ("GLM_EXPLICIT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3038 3090])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("mat" type
                                             (:template-specifier (("3") ("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3126 3151]))                                  
                                :type ("GLM_EXPLICIT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3107 3152])
                            ("tquat" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("mat" type
                                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3188 3213]))                                  
                                :type ("GLM_EXPLICIT" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3169 3214])
                            ("GLM_DEFAULT" variable (:type "int") (reparse-symbol classsubparts) [3317 3329])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil)
                                                  ("Q" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3394 3415]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3370 3416])
                            ("+=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil)
                                                  ("Q" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3481 3502]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3456 3503])
                            ("-=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil)
                                                  ("Q" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3568 3589]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3543 3590])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :function-pointer t
                                :arguments 
                                  ( ("q" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("tquat" type
                                             (:template-specifier 
                                                ( ("U" type nil nil nil)
                                                  ("Q" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3655 3676]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3630 3677])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :function-pointer t
                                :arguments 
                                  ( ("s" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3742 3746]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3717 3747])
                            ("/=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("s" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3812 3816]))                                  
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3787 3817]))                          )
                        (reparse-symbol namespacesubparts) [712 3821])
                    ("+" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3926 3947]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [3904 3948])
                    ("-" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4022 4043]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4000 4044])
                    ("+" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4146 4167])
                            ("p" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4168 4189]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4124 4190])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4264 4285])
                            ("p" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4286 4307]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4242 4308])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4383 4404])
                            ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4405 4427]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4360 4428])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4503 4525])
                            ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4526 4547]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4480 4548])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4623 4644])
                            ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4645 4667]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4600 4668])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4743 4765])
                            ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4766 4787]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4720 4788])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4862 4883])
                            ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4884 4895]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4840 4896])
                    ("" function
                       (:prototype-flag t
                        :operator-flag t
                        :function-pointer t
                        :arguments 
                          ( ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4970 4981])
                            ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [4982 5003]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [4948 5004])
                    ("/" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5078 5099])
                            ("s" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5100 5111]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5056 5112])
                    ("==" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5209 5231])
                            ("q2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5232 5254]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [5193 5255])
                    ("!=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("q1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5323 5345])
                            ("q2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5346 5368]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [5307 5369])
                    ("length" function
                       (:prototype-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5553 5574]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5544 5575])
                    ("normalize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [5769 5790]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [5747 5791])
                    ("dot" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6012 6033])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6034 6055]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6006 6056])
                    ("mix" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6638 6659])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6660 6681])
                            ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6682 6686]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [6622 6687])
                    ("lerp" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7058 7079])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7080 7101])
                            ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7102 7106]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7041 7107])
                    ("slerp" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7556 7577])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7578 7599])
                            ("a" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7600 7604]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7538 7605])
                    ("conjugate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7789 7810]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7767 7811])
                    ("inverse" function
                       (:prototype-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7991 8012]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [7971 8013])
                    ("rotate" function
                       (:prototype-flag t
                        :arguments 
                          ( ("q" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8356 8377])
                            ("angle" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8378 8393])
                            ("axis" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8394 8419]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [8337 8420])
                    ("eulerAngles" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8677 8698]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [8652 8699])
                    ("roll" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [8899 8920]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8892 8921])
                    ("pitch" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9123 9144]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9115 9145])
                    ("yaw" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9343 9364]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9337 9365])
                    ("mat3_cast" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9569 9590]))                          
                        :type ("mat" type
                             (:template-specifier (("3") ("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [9543 9591])
                    ("mat4_cast" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9795 9816]))                          
                        :type ("mat" type
                             (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [9769 9817])
                    ("quat_cast" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("3") ("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10017 10042]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [9995 10043])
                    ("quat_cast" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("mat" type
                                     (:template-specifier (("4") ("4") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10243 10268]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [10221 10269])
                    ("angle" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10452 10473]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10444 10474])
                    ("axis" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [10657 10678]))                          
                        :type ("vec" type
                             (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [10639 10679])
                    ("angleAxis" function
                       (:prototype-flag t
                        :arguments 
                          ( ("angle" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11000 11015])
                            ("axis" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vec" type
                                     (:template-specifier (("3") ("T" type nil nil nil) ("Q" type nil nil nil))
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11016 11041]))                          
                        :type ("tquat" type
                             (:template-specifier 
                                ( ("T" type nil nil nil)
                                  ("Q" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [10978 11042])
                    ("lessThan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11259 11280])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11281 11302]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11234 11303])
                    ("lessThanEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11525 11546])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11547 11568]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11495 11569])
                    ("greaterThan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11788 11809])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [11810 11831]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [11760 11832])
                    ("greaterThanEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12057 12078])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12079 12100]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12024 12101])
                    ("equal" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12315 12336])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12337 12358]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12293 12359])
                    ("notEqual" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12577 12598])
                            ("y" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [12599 12620]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [12552 12621])
                    ("isnan" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13088 13109]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [13066 13110])
                    ("isinf" function
                       (:prototype-flag t
                        :arguments 
                          ( ("x" variable
                               (:reference 1
                                :constant-flag t
                                :type ("tquat" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("Q" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13532 13553]))                          
                        :type ("vec" type
                             (:template-specifier (("4") ("bool" type nil nil nil) ("Q" type nil nil nil))
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [13510 13554]))                  
                :type "namespace")
                nil [654 13565])
            ("quaternion.inl" include nil nil [13583 13608]))          
      :file "quaternion.hpp"
      :pointmax 13609
      :fsize 13608
      :lastmodtime '(23117 59366 751423 334000)
      :unmatched-syntax '((symbol 13496 . 13509) (punctuation 13493 . 13494) (symbol 13492 . 13493) (symbol 13482 . 13491) (punctuation 13480 . 13481) (symbol 13479 . 13480) (TYPENAME 13470 . 13478) (punctuation 13469 . 13470) (TEMPLATE 13461 . 13469) (symbol 13052 . 13065) (punctuation 13049 . 13050) (symbol 13048 . 13049) (symbol 13038 . 13047) (punctuation 13036 . 13037) (symbol 13035 . 13036) (TYPENAME 13026 . 13034) (punctuation 13025 . 13026) (TEMPLATE 13017 . 13025) (symbol 12538 . 12551) (punctuation 12535 . 12536) (symbol 12534 . 12535) (symbol 12524 . 12533) (punctuation 12522 . 12523) (symbol 12521 . 12522) (TYPENAME 12512 . 12520) (punctuation 12511 . 12512) (TEMPLATE 12503 . 12511) (symbol 12279 . 12292) (punctuation 12276 . 12277) (symbol 12275 . 12276) (symbol 12265 . 12274) (punctuation 12263 . 12264) (symbol 12262 . 12263) (TYPENAME 12253 . 12261) (punctuation 12252 . 12253) (TEMPLATE 12244 . 12252) (symbol 12010 . 12023) (punctuation 12007 . 12008) (symbol 12006 . 12007) (symbol 11996 . 12005) (punctuation 11994 . 11995) (symbol 11993 . 11994) (TYPENAME 11984 . 11992) (punctuation 11983 . 11984) (TEMPLATE 11975 . 11983) (symbol 11746 . 11759) (punctuation 11743 . 11744) (symbol 11742 . 11743) (symbol 11732 . 11741) (punctuation 11730 . 11731) (symbol 11729 . 11730) (TYPENAME 11720 . 11728) (punctuation 11719 . 11720) (TEMPLATE 11711 . 11719) (symbol 11481 . 11494) (punctuation 11478 . 11479) (symbol 11477 . 11478) (symbol 11467 . 11476) (punctuation 11465 . 11466) (symbol 11464 . 11465) (TYPENAME 11455 . 11463) (punctuation 11454 . 11455) (TEMPLATE 11446 . 11454) (symbol 11220 . 11233) (punctuation 11217 . 11218) (symbol 11216 . 11217) (symbol 11206 . 11215) (punctuation 11204 . 11205) (symbol 11203 . 11204) (TYPENAME 11194 . 11202) (punctuation 11193 . 11194) (TEMPLATE 11185 . 11193) (symbol 10964 . 10977) (punctuation 10961 . 10962) (symbol 10960 . 10961) (symbol 10950 . 10959) (punctuation 10948 . 10949) (symbol 10947 . 10948) (TYPENAME 10938 . 10946) (punctuation 10937 . 10938) (TEMPLATE 10929 . 10937) (symbol 10625 . 10638) (punctuation 10622 . 10623) (symbol 10621 . 10622) (symbol 10611 . 10620) (punctuation 10609 . 10610) (symbol 10608 . 10609) (TYPENAME 10599 . 10607) (punctuation 10598 . 10599) (TEMPLATE 10590 . 10598) (symbol 10430 . 10443) (punctuation 10427 . 10428) (symbol 10426 . 10427) (symbol 10416 . 10425) (punctuation 10414 . 10415) (symbol 10413 . 10414) (TYPENAME 10404 . 10412) (punctuation 10403 . 10404) (TEMPLATE 10395 . 10403) (symbol 10207 . 10220) (punctuation 10204 . 10205) (symbol 10203 . 10204) (symbol 10193 . 10202) (punctuation 10191 . 10192) (symbol 10190 . 10191) (TYPENAME 10181 . 10189) (punctuation 10180 . 10181) (TEMPLATE 10172 . 10180) (symbol 9981 . 9994) (punctuation 9978 . 9979) (symbol 9977 . 9978) (symbol 9967 . 9976) (punctuation 9965 . 9966) (symbol 9964 . 9965) (TYPENAME 9955 . 9963) (punctuation 9954 . 9955) (TEMPLATE 9946 . 9954) (symbol 9755 . 9768) (punctuation 9752 . 9753) (symbol 9751 . 9752) (symbol 9741 . 9750) (punctuation 9739 . 9740) (symbol 9738 . 9739) (TYPENAME 9729 . 9737) (punctuation 9728 . 9729) (TEMPLATE 9720 . 9728) (symbol 9529 . 9542) (punctuation 9526 . 9527) (symbol 9525 . 9526) (symbol 9515 . 9524) (punctuation 9513 . 9514) (symbol 9512 . 9513) (TYPENAME 9503 . 9511) (punctuation 9502 . 9503) (TEMPLATE 9494 . 9502) (symbol 9323 . 9336) (punctuation 9320 . 9321) (symbol 9319 . 9320) (symbol 9309 . 9318) (punctuation 9307 . 9308) (symbol 9306 . 9307) (TYPENAME 9297 . 9305) (punctuation 9296 . 9297) (TEMPLATE 9288 . 9296) (symbol 9101 . 9114) (punctuation 9098 . 9099) (symbol 9097 . 9098) (symbol 9087 . 9096) (punctuation 9085 . 9086) (symbol 9084 . 9085) (TYPENAME 9075 . 9083) (punctuation 9074 . 9075) (TEMPLATE 9066 . 9074) (symbol 8878 . 8891) (punctuation 8875 . 8876) (symbol 8874 . 8875) (symbol 8864 . 8873) (punctuation 8862 . 8863) (symbol 8861 . 8862) (TYPENAME 8852 . 8860) (punctuation 8851 . 8852) (TEMPLATE 8843 . 8851) (symbol 8638 . 8651) (punctuation 8635 . 8636) (symbol 8634 . 8635) (symbol 8624 . 8633) (punctuation 8622 . 8623) (symbol 8621 . 8622) (TYPENAME 8612 . 8620) (punctuation 8611 . 8612) (TEMPLATE 8603 . 8611) (symbol 8323 . 8336) (punctuation 8320 . 8321) (symbol 8319 . 8320) (symbol 8309 . 8318) (punctuation 8307 . 8308) (symbol 8306 . 8307) (TYPENAME 8297 . 8305) (punctuation 8296 . 8297) (TEMPLATE 8288 . 8296) (symbol 7957 . 7970) (punctuation 7954 . 7955) (symbol 7953 . 7954) (symbol 7943 . 7952) (punctuation 7941 . 7942) (symbol 7940 . 7941) (TYPENAME 7931 . 7939) (punctuation 7930 . 7931) (TEMPLATE 7922 . 7930) (symbol 7753 . 7766) (punctuation 7750 . 7751) (symbol 7749 . 7750) (symbol 7739 . 7748) (punctuation 7737 . 7738) (symbol 7736 . 7737) (TYPENAME 7727 . 7735) (punctuation 7726 . 7727) (TEMPLATE 7718 . 7726) (symbol 7524 . 7537) (punctuation 7521 . 7522) (symbol 7520 . 7521) (symbol 7510 . 7519) (punctuation 7508 . 7509) (symbol 7507 . 7508) (TYPENAME 7498 . 7506) (punctuation 7497 . 7498) (TEMPLATE 7489 . 7497) (symbol 7027 . 7040) (punctuation 7024 . 7025) (symbol 7023 . 7024) (symbol 7013 . 7022) (punctuation 7011 . 7012) (symbol 7010 . 7011) (TYPENAME 7001 . 7009) (punctuation 7000 . 7001) (TEMPLATE 6992 . 7000) (symbol 6608 . 6621) (punctuation 6605 . 6606) (symbol 6604 . 6605) (symbol 6594 . 6603) (punctuation 6592 . 6593) (symbol 6591 . 6592) (TYPENAME 6582 . 6590) (punctuation 6581 . 6582) (TEMPLATE 6573 . 6581) (symbol 5992 . 6005) (punctuation 5989 . 5990) (symbol 5988 . 5989) (symbol 5978 . 5987) (punctuation 5976 . 5977) (symbol 5975 . 5976) (TYPENAME 5966 . 5974) (punctuation 5965 . 5966) (TEMPLATE 5957 . 5965) (symbol 5733 . 5746) (punctuation 5730 . 5731) (symbol 5729 . 5730) (symbol 5719 . 5728) (punctuation 5717 . 5718) (symbol 5716 . 5717) (TYPENAME 5707 . 5715) (punctuation 5706 . 5707) (TEMPLATE 5698 . 5706) (symbol 5530 . 5543) (punctuation 5527 . 5528) (symbol 5526 . 5527) (symbol 5516 . 5525) (punctuation 5514 . 5515) (symbol 5513 . 5514) (TYPENAME 5504 . 5512) (punctuation 5503 . 5504) (TEMPLATE 5495 . 5503) (symbol 5293 . 5306) (punctuation 5290 . 5291) (symbol 5289 . 5290) (symbol 5279 . 5288) (punctuation 5277 . 5278) (symbol 5276 . 5277) (TYPENAME 5267 . 5275) (punctuation 5266 . 5267) (TEMPLATE 5258 . 5266) (symbol 5179 . 5192) (punctuation 5176 . 5177) (symbol 5175 . 5176) (symbol 5165 . 5174) (punctuation 5163 . 5164) (symbol 5162 . 5163) (TYPENAME 5153 . 5161) (punctuation 5152 . 5153) (TEMPLATE 5144 . 5152) (symbol 5042 . 5055) (punctuation 5039 . 5040) (symbol 5038 . 5039) (symbol 5028 . 5037) (punctuation 5026 . 5027) (symbol 5025 . 5026) (TYPENAME 5016 . 5024) (punctuation 5015 . 5016) (TEMPLATE 5007 . 5015) (symbol 4934 . 4947) (punctuation 4931 . 4932) (symbol 4930 . 4931) (symbol 4920 . 4929) (punctuation 4918 . 4919) (symbol 4917 . 4918) (TYPENAME 4908 . 4916) (punctuation 4907 . 4908) (TEMPLATE 4899 . 4907) (symbol 4826 . 4839) (punctuation 4823 . 4824) (symbol 4822 . 4823) (symbol 4812 . 4821) (punctuation 4810 . 4811) (symbol 4809 . 4810) (TYPENAME 4800 . 4808) (punctuation 4799 . 4800) (TEMPLATE 4791 . 4799) (symbol 4706 . 4719) (punctuation 4703 . 4704) (symbol 4702 . 4703) (symbol 4692 . 4701) (punctuation 4690 . 4691) (symbol 4689 . 4690) (TYPENAME 4680 . 4688) (punctuation 4679 . 4680) (TEMPLATE 4671 . 4679) (symbol 4586 . 4599) (punctuation 4583 . 4584) (symbol 4582 . 4583) (symbol 4572 . 4581) (punctuation 4570 . 4571) (symbol 4569 . 4570) (TYPENAME 4560 . 4568) (punctuation 4559 . 4560) (TEMPLATE 4551 . 4559) (symbol 4466 . 4479) (punctuation 4463 . 4464) (symbol 4462 . 4463) (symbol 4452 . 4461) (punctuation 4450 . 4451) (symbol 4449 . 4450) (TYPENAME 4440 . 4448) (punctuation 4439 . 4440) (TEMPLATE 4431 . 4439) (symbol 4346 . 4359) (punctuation 4343 . 4344) (symbol 4342 . 4343) (symbol 4332 . 4341) (punctuation 4330 . 4331) (symbol 4329 . 4330) (TYPENAME 4320 . 4328) (punctuation 4319 . 4320) (TEMPLATE 4311 . 4319) (symbol 4228 . 4241) (punctuation 4225 . 4226) (symbol 4224 . 4225) (symbol 4214 . 4223) (punctuation 4212 . 4213) (symbol 4211 . 4212) (TYPENAME 4202 . 4210) (punctuation 4201 . 4202) (TEMPLATE 4193 . 4201) (symbol 4110 . 4123) (punctuation 4107 . 4108) (symbol 4106 . 4107) (symbol 4096 . 4105) (punctuation 4094 . 4095) (symbol 4093 . 4094) (TYPENAME 4084 . 4092) (punctuation 4083 . 4084) (TEMPLATE 4075 . 4083) (symbol 3986 . 3999) (punctuation 3983 . 3984) (symbol 3982 . 3983) (symbol 3972 . 3981) (punctuation 3970 . 3971) (symbol 3969 . 3970) (TYPENAME 3960 . 3968) (punctuation 3959 . 3960) (TEMPLATE 3951 . 3959) (symbol 3890 . 3903) (punctuation 3887 . 3888) (symbol 3886 . 3887) (symbol 3876 . 3885) (punctuation 3874 . 3875) (symbol 3873 . 3874) (TYPENAME 3864 . 3872) (punctuation 3863 . 3864) (TEMPLATE 3855 . 3863) (symbol 3773 . 3786) (punctuation 3769 . 3770) (symbol 3768 . 3769) (TYPENAME 3759 . 3767) (punctuation 3758 . 3759) (TEMPLATE 3750 . 3758) (symbol 3703 . 3716) (punctuation 3699 . 3700) (symbol 3698 . 3699) (TYPENAME 3689 . 3697) (punctuation 3688 . 3689) (TEMPLATE 3680 . 3688) (symbol 3616 . 3629) (punctuation 3612 . 3613) (symbol 3611 . 3612) (TYPENAME 3602 . 3610) (punctuation 3601 . 3602) (TEMPLATE 3593 . 3601) (symbol 3529 . 3542) (punctuation 3525 . 3526) (symbol 3524 . 3525) (TYPENAME 3515 . 3523) (punctuation 3514 . 3515) (TEMPLATE 3506 . 3514) (symbol 3442 . 3455) (punctuation 3438 . 3439) (symbol 3437 . 3438) (TYPENAME 3428 . 3436) (punctuation 3427 . 3428) (TEMPLATE 3419 . 3427) (symbol 3356 . 3369) (punctuation 3352 . 3353) (symbol 3351 . 3352) (TYPENAME 3342 . 3350) (punctuation 3341 . 3342) (TEMPLATE 3333 . 3341) (semantic-list 3294 . 3316) (punctuation 3293 . 3294) (OPERATOR 3285 . 3293) (punctuation 3283 . 3284) (punctuation 3281 . 3282) (symbol 3280 . 3281) (punctuation 3278 . 3279) (symbol 3277 . 3278) (punctuation 3276 . 3277) (symbol 3271 . 3276) (symbol 3257 . 3270) (symbol 3155 . 3168) (symbol 3093 . 3106) (symbol 3024 . 3037) (symbol 2372 . 2385) (symbol 2358 . 2371) (punctuation 2354 . 2355) (symbol 2353 . 2354) (symbol 2343 . 2352) (punctuation 2341 . 2342) (symbol 2340 . 2341) (TYPENAME 2331 . 2339) (punctuation 2330 . 2331) (TEMPLATE 2322 . 2330) (symbol 2228 . 2241) (symbol 2163 . 2176) (symbol 2063 . 2076) (punctuation 2059 . 2060) (symbol 2058 . 2059) (symbol 2048 . 2057) (punctuation 2047 . 2048) (TEMPLATE 2039 . 2047) (semantic-list 2001 . 2023) (symbol 1996 . 2001) (symbol 1982 . 1995) (symbol 1968 . 1981) (semantic-list 1950 . 1952) (symbol 1945 . 1950) (symbol 1931 . 1944) (symbol 1917 . 1930) (symbol 1818 . 1831) (symbol 1771 . 1784) (symbol 1722 . 1735) (STATIC 1715 . 1721) (symbol 1701 . 1714) (semantic-list 599 . 645) (symbol 592 . 599) (string 600 . 644) (symbol 585 . 591) (string 600 . 644) (punctuation 583 . 584) (symbol 362 . 366) (symbol 355 . 361) (punctuation 354 . 355)))
    (semanticdb-table "vec1.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("../ext/vec1.hpp" include nil nil [287 313])
            ("glm" type
               (:members 
                  ( ("bvec1" type
                       (:typedef ("highp_bvec1" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [804 833])
                    ("vec1" type
                       (:typedef ("highp_vec1" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1157 1184])
                    ("dvec1" type
                       (:typedef ("highp_dvec1" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1517 1546])
                    ("ivec1" type
                       (:typedef ("highp_ivec1" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1868 1896])
                    ("uvec1" type
                       (:typedef ("highp_uvec1" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [2223 2251]))                  
                :type "namespace")
                nil [451 2276])
            ("vec1.inl" include nil nil [2294 2313]))          
      :file "vec1.hpp"
      :pointmax 2314
      :fsize 2313
      :lastmodtime '(23117 59366 751423 334000)
      :unmatched-syntax '((semantic-list 402 . 442) (symbol 395 . 402) (string 403 . 441) (symbol 388 . 394) (string 403 . 441) (punctuation 386 . 387) (symbol 266 . 270) (symbol 259 . 265) (punctuation 258 . 259)))
    (semanticdb-table "type_ptr.inl"
      :file "type_ptr.inl"
      :fsize 8590
      :lastmodtime '(23117 59366 751423 334000))
    (semanticdb-table "constants.inl"
      :file "constants.inl"
      :fsize 4174
      :lastmodtime '(23117 59366 751423 334000))
    (semanticdb-table "quaternion.inl"
      :file "quaternion.inl"
      :fsize 22398
      :lastmodtime '(23117 59366 751423 334000))
    (semanticdb-table "vec1.inl"
      :file "vec1.inl"
      :fsize 45
      :lastmodtime '(23117 59366 751423 334000)))
  :file "!usr!include!glm!gtc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
